/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import modelo.ConsultaDAO;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.Map;

/**
 * VentanaPrincipal - La Vista en el patrón MVC
 * Usa ConsultaDAO para obtener datos de la base de datos.
 * 
 * @author Marcelo-HP
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger
            .getLogger(VentanaPrincipal.class.getName());

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        // Configurar UTF-8 para toda la aplicación
        System.setProperty("file.encoding", "UTF-8");
        System.setProperty("client.encoding.override", "UTF-8");

        initComponents();
        cargarTablasEnComboBox();
    }

    /**
     * Carga automáticamente las tablas de la base de datos en el ComboBox
     * Ahora usa el Controlador en vez de acceder directamente a DatabaseManager
     */
    private void cargarTablasEnComboBox() {
        try {
            // Pedimos las tablas al DAO a través de... bueno, directamente
            // (o podríamos agregar un método público en Controlador)
            ConsultaDAO dao = new ConsultaDAO();
            List<String> tablas = dao.obtenerNombresDeTablas();

            // Crear modelo para el ComboBox
            DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
            modelo.addElement("-- Seleccione una tabla --");

            // Agregar nombres de tablas al modelo
            for (String nombreTabla : tablas) {
                modelo.addElement(nombreTabla);
            }

            // Asignar modelo al ComboBox
            jComboBoxNombreTabla.setModel(modelo);

            logger.info("Tablas cargadas exitosamente en el ComboBox");

        } catch (Exception e) {
            logger.log(java.util.logging.Level.SEVERE, "Error al cargar tablas", e);
            JOptionPane.showMessageDialog(this,
                    "Error al cargar las tablas: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Muestra los datos de una tabla en el JTable con formato correcto
     */
    private void mostrarDatosEnTabla(String nombreTabla) {
        try {
            // Obtener datos del DAO
            ConsultaDAO dao = new ConsultaDAO();
            List<String> columnas = dao.obtenerColumnasDeTabla(nombreTabla);
            List<Map<String, Object>> datos = dao.obtenerDatosDeTabla(nombreTabla);

            // Crear modelo para el JTable
            DefaultTableModel modeloTabla = new DefaultTableModel();

            // Agregar columnas al modelo
            for (String columna : columnas) {
                modeloTabla.addColumn(columna);
            }

            // Agregar filas al modelo
            for (Map<String, Object> fila : datos) {
                Object[] filaArray = new Object[columnas.size()];
                for (int i = 0; i < columnas.size(); i++) {
                    filaArray[i] = fila.get(columnas.get(i));
                }
                modeloTabla.addRow(filaArray);
            }

            // Asignar modelo al JTable
            jTable1.setModel(modeloTabla);

            // Ajustar el ancho de las columnas automáticamente
            jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);

            logger.info("Datos de la tabla " + nombreTabla + " mostrados correctamente. Total de registros: "
                    + datos.size());

            // Mostrar mensaje de éxito
            if (datos.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "La tabla está vacía",
                        "Información",
                        JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            logger.log(java.util.logging.Level.SEVERE, "Error al mostrar datos", e);
            JOptionPane.showMessageDialog(this,
                    "Error al mostrar datos: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButtonListar = new javax.swing.JButton();
        jComboBoxNombreTabla = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonListar.setText("Listar");
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });

        jComboBoxNombreTabla.setModel(
                new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxNombreTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNombreTablaActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 811,
                                                Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButtonListar)
                                                .addGap(18, 18, 18)
                                                .addComponent(jComboBoxNombreTabla,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 247,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap()));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonListar)
                                        .addComponent(jComboBoxNombreTabla, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        jTabbedPane1.addTab("Listar", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxNombreTablaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBoxNombreTablaActionPerformed
        // TODO add your handling code here
        String tabla = (String) jComboBoxNombreTabla.getSelectedItem();
        if (tabla != null && !tabla.startsWith("--")) {
            System.out.println("Seleccionaste: " + tabla);
            // Aquí puedes listar los datos de esa tabla
        }

    }// GEN-LAST:event_jComboBoxNombreTablaActionPerformed

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonListarActionPerformed
        String tablaSeleccionada = (String) jComboBoxNombreTabla.getSelectedItem();

        if (tablaSeleccionada == null || tablaSeleccionada.startsWith("--")) {
            JOptionPane.showMessageDialog(this,
                    "Por favor selecciona una tabla primero",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Mostrar los datos en el JTable con el formato correcto
        mostrarDatosEnTabla(tablaSeleccionada);
    }// GEN-LAST:event_jButtonListarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new VentanaPrincipal().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonListar;
    private javax.swing.JComboBox<String> jComboBoxNombreTabla;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
